# circleCIのバージョン指定
version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    steps:
# Djangoのテストを実行
      - checkout
      - run:
          name: make env file
          command: |
            echo DEBUG=${DEBUG} > .env
            echo SECRET_KEY=${SECRET_KEY} >> .env
            echo APIKEY=${APIKEY} >> .env
            echo MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} >> .env
            echo MYSQL_DATABASE=${MYSQL_DATABASE} >> .env
            echo MYSQL_USER=${MYSQL_USER} >> .env
            echo MYSQL_PASSWORD=${MYSQL_PASSWORD} >> .env
      - run:
          name: cp env file to src directory
          command: cp .env src/.env
      - run:
          name: check file list in project directory
          command: ls -a
      - run:
          name: check file list in src directory
          command: ls src -a
      - run:
          name: check .env in project directory
          command: cat .env
      - run:
          name: check src/.env in project directory
          command: cat src/.env
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for launch db to migrate at Django
          command: sleep 20
      - run:
          name: migrate
          command: docker-compose run python ./manage.py migrate
      - run:
          name: test
          command: docker-compose run python ./manage.py test
      - run:
          name: docker-compose down
          command: docker-compose down
# EC2にSSH接続し、デプロイを実行
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # CircleCIに登録した秘密鍵を呼び出す。
      - add_ssh_keys
      - run: ssh ${USER_NAME}@${HOST_NAME} -p ${SSH_PORT} 'cd pljudge && git pull origin main && docker-compose run python ./manage.py migrate'

# テストが成功した場合のみ、deployを実行するようにします。
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # mainブランチがpushされた場合のみdeployするようにする。
          filters:
            branches:
              only: main